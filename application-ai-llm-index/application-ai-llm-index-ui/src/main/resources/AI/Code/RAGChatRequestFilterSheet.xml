<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="AI.Code.RAGChatRequestFilterSheet" locale="">
  <web>AI.Code</web>
  <name>RAGChatRequestFilterSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>AI.Code.RAGChatRequestFilterClass</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>RAGChatRequestFilterSheet</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#set ($object = $doc.getObject('AI.Code.RAGChatRequestFilterClass'))
#if ("$!object" == "")
  {{info}}This sheet needs to be applied on a document with a AI.Code.RAGChatRequestFilterClass object.{{/info}}
#else
  === {{translation key="llm.rag.filterTitle" /}} ===

  {{translation key="llm.rag.filterDescription" /}}

  $doc.use($object)
  {{html clean="false" wiki="true"}}
  &lt;dl&gt;
    &lt;dt #if (!$editing &amp;&amp; $hasEdit)
        class="editableProperty"
        data-property="$escapetool.xml($services.model.serialize($object.getPropertyReference('collections')))"
        data-object-policy="updateOrCreate"
        data-property-type="object"#end&gt;
      &lt;label#if ($editing) for="AI.Code.RAGChatRequestFilterClass_0_collections"#end&gt;
        $escapetool.xml($doc.displayPrettyName('collections', false, false))
      &lt;/label&gt;
    &lt;/dt&gt;
    &lt;dd&gt;$doc.display('collections')&lt;/dd&gt;
    &lt;dt #if (!$editing &amp;&amp; $hasEdit)
        class="editableProperty"
        data-property="$escapetool.xml($services.model.serialize($object.getPropertyReference('maxResults')))"
        data-object-policy="updateOrCreate"
        data-property-type="object"#end&gt;
      &lt;label#if ($editing) for="AI.Code.RAGChatRequestFilterClass_0_maxResults"#end&gt;
        $escapetool.xml($doc.displayPrettyName('maxResults', false, false))
      &lt;/label&gt;
    &lt;/dt&gt;
    &lt;dd&gt;$doc.display('maxResults')&lt;/dd&gt;
    &lt;dt #if (!$editing &amp;&amp; $hasEdit)
        class="editableProperty"
        data-property="$escapetool.xml($services.model.serialize($object.getPropertyReference('maxKeywordResults')))"
        data-object-policy="updateOrCreate"
        data-property-type="object"#end&gt;
      &lt;label#if ($editing) for="AI.Code.RAGChatRequestFilterClass_0_maxKeywordResults"#end&gt;
        $escapetool.xml($doc.displayPrettyName('maxKeywordResults', false, false))
      &lt;/label&gt;
    &lt;/dt&gt;
    &lt;dd&gt;$doc.display('maxKeywordResults')&lt;/dd&gt;
    &lt;dt #if (!$editing &amp;&amp; $hasEdit)
        class="editableProperty"
        data-property="$escapetool.xml($services.model.serialize($object.getPropertyReference('contextPrompt')))"
        data-object-policy="updateOrCreate"
        data-property-type="object"#end&gt;
      &lt;label#if ($editing) for="AI.Code.RAGChatRequestFilterClass_0_contextPrompt"#end&gt;
        $escapetool.xml($doc.displayPrettyName('contextPrompt', false, false))
      &lt;/label&gt;
      &lt;span class="xHint"&gt;
        $escapetool.xml($services.localization.render(
            $xwiki.getDocument('AI.Code.RAGChatRequestFilterClass').getxWikiClass().get('contextPrompt').getHint())
        )
      &lt;/span&gt;
    &lt;/dt&gt;
    &lt;dd&gt;$doc.display('contextPrompt')&lt;/dd&gt;
    &lt;dt #if (!$editing &amp;&amp; $hasEdit)
        class="editableProperty"
        data-property="$escapetool.xml($services.model.serialize($object.getPropertyReference('chunkTemplate')))"
        data-object-policy="updateOrCreate"
        data-property-type="object"#end&gt;
      &lt;label#if ($editing) for="AI.Code.RAGChatRequestFilterClass_0_chunkTemplatet"#end&gt;
        $escapetool.xml($doc.displayPrettyName('chunkTemplate', false, false))
      &lt;/label&gt;
      &lt;span class="xHint"&gt;
        $escapetool.xml($services.localization.render(
            $xwiki.getDocument('AI.Code.RAGChatRequestFilterClass').getxWikiClass().get('chunkTemplate').getHint())
        )
      &lt;/span&gt;
    &lt;/dt&gt;
    &lt;dd&gt;$doc.display('chunkTemplate')&lt;/dd&gt;

  &lt;/dl&gt;
  {{/html}}
#end
{{/velocity}}</content>
</xwikidoc>
